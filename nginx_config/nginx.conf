worker_processes  1;

# Define error log location (use absolute Windows path)
error_log  C:/nginx/logs/error.log notice; # You can change 'notice' to 'info', 'warn', or 'error'

events {
    worker_connections  1024; # Default is usually fine
}

http {
    # Limit request zone (moved outside the server block)
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=1r/s; # 1 request per second per IP

    include       mime.types; # Include standard MIME types
    default_type  application/octet-stream;

    # Define a log format (optional, but helpful)
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Define access log location (use absolute Windows path)
    access_log  C:/nginx/logs/access.log main; # Using the 'main' format defined above

    sendfile        on;   # Efficiently send files
    tcp_nopush     on;  # Optimizes packet sending (usually paired with sendfile)

    keepalive_timeout  65; # Keep connections open for a while

    # gzip compression (optional for performance)
    gzip  on; # Enable gzip compression to reduce bandwidth usage

    # Recommended SSL settings
    ssl_protocols TLSv1.2 TLSv1.3; # Modern protocols
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5; # Example cipher suite (adjust as needed)
    ssl_session_cache shared:SSL:10m; # Improve performance
    ssl_session_timeout 10m;

    # ----- SERVER BLOCK FOR HTTP REDIRECT -----
    server {
        listen       80;             # Listen on port 80 for incoming HTTP requests
        server_name  localhost;      # Respond to requests for 'localhost' (or your domain)

        # Permanently redirect all HTTP traffic to HTTPS
        return 301 https://$host$request_uri;
    }
    # ----- END HTTP REDIRECT BLOCK -----


    # ----- SERVER BLOCK FOR HTTPS REVERSE PROXY -----
    server {
        listen 443 ssl;  # Enable HTTP/2 for performance
        http2 on;
	server_name  somma.homepc.it;      # Respond to requests for your domain

        # --- SSL Certificate Configuration ---
        ssl_certificate     C:/nginx/ssl/live/somma.homepc.it/somma.homepc.it-chain.pem;
        ssl_certificate_key C:/nginx/ssl/live/somma.homepc.it/somma.homepc.it-key.pem;

        # --- Apply a basic security header for added protection ---
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always; # HSTS
        add_header X-Content-Type-Options nosniff always; # Prevent MIME type sniffing
        add_header X-Frame-Options "SAMEORIGIN" always;  # Prevent clickjacking
        add_header X-XSS-Protection "1; mode=block" always; # Prevent reflected XSS attacks
        add_header Referrer-Policy "no-referrer-when-downgrade" always; # Referrer policy

        # --- Access Log Configuration ---
        access_log  C:/nginx/logs/https_access.log main;  # Use a separate access log for SSL traffic

        # ----- Proxy Settings -----
        location / {
            # Forward requests to the app container
            proxy_pass http://localhost:3000; 

            # Important Proxy Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme; # Nginx automatically sets this to 'https' for SSL

            # --- Optional: WebSocket Support (uncomment if needed) ---
            # proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";
        }

        # ----- Block Access to Hidden Files -----
        location ~ /\. {
            deny all;
        }

        # ----- Block Access to Certain File Extensions -----
        location ~* \.(git|svn|hg|idea|vscode) {
            deny all;
        }

        # ----- DDoS Prevention: Limit Connections -----
        limit_conn addr 10;  # Limit the number of connections per IP (maximum 10 concurrent connections per IP)

        # ----- Rate Limiting (e.g., allow 1 request per second) -----
        limit_req zone=req_limit_per_ip burst=5 nodelay; # Limit the number of requests per second
    }
    # ----- END HTTPS SERVER BLOCK -----

    # ----- DDoS Prevention: Global Connection Limiting -----
    limit_conn_zone $binary_remote_addr zone=addr:10m;

}